#!/usr/bin/env bash

set -e

usage() {
    echo "Usage: $0 [options]"
    echo "Options:"
    echo "  --quay-user <username>         Quay username"
    echo "  --quay-password <password>     Quay password"
    echo "  --docker-user <username>       Docker username"
    echo "  --docker-password <password>   Docker password"
}

QUAY_USER=""
QUAY_PASSWORD=""
DOCKER_USER=""
DOCKER_PASSWORD=""
USER_PROVIDED=false

while [[ $# -gt 0 ]]; do
    case "$1" in
        --quay-user)
            QUAY_USER="$2"
            USER_PROVIDED=true
            shift 2
            ;;
        --quay-password)
            QUAY_PASSWORD="$2"
            shift 2
            ;;
        --docker-user)
            DOCKER_USER="$2"
            USER_PROVIDED=true
            shift 2
            ;;
        --docker-password)
            DOCKER_PASSWORD="$2"
            shift 2
            ;;
        *)
            echo "Invalid option: $1" >&2
            usage
            exit 1
            ;;
    esac
done

check_user_provided() {
    if ! $USER_PROVIDED; then
        echo "At least one of the users must be provided." >&2
        usage
        exit 1
    fi
}

check_credentials() {
    if [[ -n $1 && -z $2 ]]; then
        echo "If $3 is provided, $4 must also be provided." >&2
        usage
        exit 1
    fi
}

check_user_provided

if [[ -n $QUAY_USER && -n $QUAY_PASSWORD ]]; then
    check_credentials "$QUAY_USER" "$QUAY_PASSWORD" "--quay-user" "--quay-password"
    if command -v "podman" > /dev/null 2>&1; then
        echo "Trying to login to quay.io..."
        podman login -u="${QUAY_USER}" -p="${QUAY_PASSWORD}" quay.io
    elif command -v "docker" > /dev/null 2>&1; then
        echo "Trying to login to quay.io..."
        docker login -u="${QUAY_USER}" -p="${QUAY_PASSWORD}" quay.io
    else
        echo "podman or docker is required." >&2
        exit 1
    fi
fi

if [[ -n $DOCKER_USER && -n $DOCKER_PASSWORD ]]; then
    check_credentials "$DOCKER_USER" "$DOCKER_PASSWORD" "--docker-user" "--docker-password"
    if command -v "podman" > /dev/null 2>&1; then
        echo "Trying to login to docker.io..."
        podman login -u="${DOCKER_USER}" -p="${DOCKER_PASSWORD}" docker.io
    elif command -v "docker" > /dev/null 2>&1; then
        echo "Trying to login to docker.io..."
        docker login -u="${DOCKER_USER}" -p="${DOCKER_PASSWORD}" docker.io
    else
        echo "podman or docker is required." >&2
        exit 1
    fi
fi

DOCKER_CONFIG_PATH="$HOME/.docker/config.json"
PODMAN_CONFIG_PATH="${XDG_RUNTIME_DIR}/containers/auth.json"

if [ -e "${PODMAN_CONFIG_PATH}" ]; then
    EFFECTIVE_CONFIG_FILE="${PODMAN_CONFIG_PATH}"
elif [ -e "${DOCKER_CONFIG_PATH}" ]; then
    EFFECTIVE_CONFIG_FILE="${DOCKER_CONFIG_PATH}"
else
    echo "Config file not found in ${PODMAN_CONFIG_PATH} or ${DOCKER_CONFIG_PATH}." >&2
    exit 1
fi

oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson="${EFFECTIVE_CONFIG_FILE}"